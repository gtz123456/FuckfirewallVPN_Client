name: Build pyinstaller application

on: 
  push

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyside6 requests pyinstaller
    - name: Install binutils for linux
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install binutils
    - name: pyinstaller
      run: | 
        pyinstaller client.spec
    - name: build dmg
      if: matrix.os == 'macos-latest'
      run: git clone https://github.com/create-dmg/create-dmg.git
        create-dmg/create-dmg \
          --volname "Client" \
          --volicon "ico.icns" \
          --window-pos 10 20 \
          --window-size 400 300 \
          --icon-size 100 \
          --icon "client.app" 100 50 \
          --app-drop-link 300 50 \
          "client.dmg" \
          "dist/client.app"

    - name: Release for macos
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'macos-latest'
      with:
        token: ${{ secrets.token }}
        files: client.dmg
    - name: Release for windows
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'windows-latest'
      with:
        token: ${{ secrets.token }}
        files: dist/client.exe
    - name: Release for linux
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest'
      with:
        token: ${{ secrets.token }}
        files: dist/client
      